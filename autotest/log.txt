frontend finish
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
@c = dso_local global i32 0 
@d = dso_local global [1 x i32] zeroinitializer 
@_a_4_b = dso_local global [2 x i32] [i32 0, i32 12]
@z = dso_local global i32 0 
@_d_e = dso_local global i32 1
@glo_1 = dso_local global i32 0 
@glo_2 = dso_local global i32 0 
@glo_3 = dso_local global i32 0 
@glo_4 = dso_local global i32 0 
@glo_5 = dso_local global i32 0 
@glo_6 = dso_local global i32 0 
@glo_7 = dso_local global i32 0 
@glo_8 = dso_local global i32 0 
@glo_9 = dso_local global i32 0 

define dso_local void @test_1(i32,i32*,i32*) {
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = load i32, i32* %4
	%6 = getelementptr i32, i32* %1, i32 0
	%7 = load i32, i32* %6
	%8 = add i32 %5, %7
	%9 = getelementptr i32, i32* %2, i32 0
	%10 = load i32, i32* %9
	%11 = add i32 %8, %10
	store i32 %11, i32* @c
	ret void
}

define dso_local i32 @main() {
	%1 = alloca i32
	%2 = alloca [1 x i32]
	%3 = alloca [2 x i32]
	%4 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	store i32 0, i32* %4
	%5 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 1
	store i32 12, i32* %5
	%6 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	%7 = load i32, i32* %6
	%8 = add i32 0, %7
	%9 = mul i32 %8, 13
	%10 = add i32 %9, 1
	%11 = alloca i32
	store i32 %10, i32* %11
	%12 = getelementptr [1 x i32], [1 x i32]* %2, i32 0, i32 0
	store i32 1, i32* %12
	%13 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	store i32 1, i32* %13
	%14 = load i32, i32* %11
	%15 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	%16 = load i32, i32* %15
	%17 = add i32 %14, %16
	store i32 %17, i32* %1
	%18 = call i32 @getint()
	store i32 %18, i32* @glo_1
	%19 = call i32 @getint()
	store i32 %19, i32* @glo_2
	%20 = call i32 @getint()
	store i32 %20, i32* @glo_3
	%21 = call i32 @getint()
	store i32 %21, i32* @glo_4
	%22 = call i32 @getint()
	store i32 %22, i32* @glo_5
	%23 = call i32 @getint()
	store i32 %23, i32* @glo_6
	%24 = call i32 @getint()
	store i32 %24, i32* @glo_7
	%25 = call i32 @getint()
	store i32 %25, i32* @glo_8
	%26 = call i32 @getint()
	store i32 %26, i32* @glo_9
	%27 = load i32, i32* %1
	%28 = getelementptr [1 x i32], [1 x i32]* %2, i32 0, i32 0
	%29 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	call void @test_1(i32 %27,i32* %28,i32* %29)
	br label %30
30:
	%31 = load i32, i32* @glo_9
	%32 = icmp sgt i32 %31, 0
	%33 = icmp ne i1 %32, 0
	br i1 %33, label %34, label %48
34:
	%35 = load i32, i32* @glo_2
	%36 = icmp sgt i32 %35, 2
	%37 = icmp ne i1 %36, 0
	br i1 %37, label %57, label %60
38:
		call void @putch(i32 49)
	call void @putch(i32 57)
	call void @putch(i32 50)
	call void @putch(i32 51)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 55)
	call void @putch(i32 54)
	call void @putch(i32 10)

	%39 = load i32, i32* @glo_1
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 49)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %39)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%40 = load i32, i32* @glo_2
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 50)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %40)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%41 = load i32, i32* @glo_3
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 51)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %41)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%42 = load i32, i32* @glo_4
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 52)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %42)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%43 = load i32, i32* @glo_5
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 53)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %43)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%44 = load i32, i32* @glo_6
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 54)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %44)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%45 = load i32, i32* @glo_7
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 55)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %45)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%46 = load i32, i32* @glo_8
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 56)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %46)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	%47 = load i32, i32* @glo_9
		call void @putch(i32 62)
	call void @putch(i32 47)
	call void @putch(i32 33)
	call void @putch(i32 126)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 57)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 58)

	call void @putint(i32 %47)
		call void @putch(i32 59)
	call void @putch(i32 126)
	call void @putch(i32 10)

	ret i32 0
48:
	%49 = load i32, i32* @glo_8
	%50 = icmp sgt i32 %49, 0
	%51 = icmp ne i1 %50, 0
	br i1 %51, label %52, label %38
52:
	%53 = load i32, i32* @glo_7
	%54 = icmp sgt i32 %53, 0
	%55 = icmp ne i1 %54, 0
	br i1 %55, label %34, label %38
56:
	br label %30
57:
	%58 = load i32, i32* @glo_2
	%59 = sub i32 %58, 1
	store i32 %59, i32* @glo_2
	br label %30
60:
	%61 = load i32, i32* @glo_2
	%62 = sub i32 %61, 1
	store i32 %62, i32* @glo_2
	%63 = load i32, i32* @glo_1
	%64 = sub i32 %63, 1
	store i32 %64, i32* @glo_1
	%65 = load i32, i32* @glo_1
	%66 = icmp slt i32 %65, 0
	%67 = icmp ne i1 %66, 0
	br i1 %67, label %69, label %68
68:
	br label %56
69:
	br label %38
}
@c, 0
@d, 4
@_a_4_b, 8
@z, 16
@_d_e, 20
@glo_1, 24
@glo_2, 28
@glo_3, 32
@glo_4, 36
@glo_5, 40
@glo_6, 44
@glo_7, 48
@glo_8, 52
@glo_9, 56
============================== in  function :: test_1
%0, addr = 4
%1, addr = 8
%2, addr = 12
%4, space = 4, addr = 16
, space = 0, addr = 20
%5, space = 4, addr = 20
%6, space = 4, addr = 24
%7, space = 4, addr = 28
%8, space = 4, addr = 32
%9, space = 4, addr = 36
%10, space = 4, addr = 40
%11, space = 4, addr = 44
, space = 0, addr = 48
, space = 0, addr = 48
============================== in  function :: main
%1, space = 4, addr = 4
%2, space = 4, addr = 8
%3, space = 8, addr = 12
%4, space = 4, addr = 20
, space = 0, addr = 24
%5, space = 4, addr = 24
, space = 0, addr = 28
%6, space = 4, addr = 28
%7, space = 4, addr = 32
%8, space = 4, addr = 36
%9, space = 4, addr = 40
%10, space = 4, addr = 44
%11, space = 4, addr = 48
, space = 0, addr = 52
%12, space = 4, addr = 52
, space = 0, addr = 56
%13, space = 4, addr = 56
, space = 0, addr = 60
%14, space = 4, addr = 60
%15, space = 4, addr = 64
%16, space = 4, addr = 68
%17, space = 4, addr = 72
, space = 0, addr = 76
%18, space = 4, addr = 76
, space = 0, addr = 80
%19, space = 4, addr = 80
, space = 0, addr = 84
%20, space = 4, addr = 84
, space = 0, addr = 88
%21, space = 4, addr = 88
, space = 0, addr = 92
%22, space = 4, addr = 92
, space = 0, addr = 96
%23, space = 4, addr = 96
, space = 0, addr = 100
%24, space = 4, addr = 100
, space = 0, addr = 104
%25, space = 4, addr = 104
, space = 0, addr = 108
%26, space = 4, addr = 108
, space = 0, addr = 112
%27, space = 4, addr = 112
%28, space = 4, addr = 116
%29, space = 4, addr = 120
, space = 0, addr = 124
, space = 0, addr = 124
%31, space = 4, addr = 124
%32, space = 4, addr = 128
%33, space = 4, addr = 132
, space = 0, addr = 136
%35, space = 4, addr = 136
%36, space = 4, addr = 140
%37, space = 4, addr = 144
, space = 0, addr = 148
, space = 0, addr = 148
%39, space = 4, addr = 148
, space = 0, addr = 152
, space = 0, addr = 152
, space = 0, addr = 152
%40, space = 4, addr = 152
, space = 0, addr = 156
, space = 0, addr = 156
, space = 0, addr = 156
%41, space = 4, addr = 156
, space = 0, addr = 160
, space = 0, addr = 160
, space = 0, addr = 160
%42, space = 4, addr = 160
, space = 0, addr = 164
, space = 0, addr = 164
, space = 0, addr = 164
%43, space = 4, addr = 164
, space = 0, addr = 168
, space = 0, addr = 168
, space = 0, addr = 168
%44, space = 4, addr = 168
, space = 0, addr = 172
, space = 0, addr = 172
, space = 0, addr = 172
%45, space = 4, addr = 172
, space = 0, addr = 176
, space = 0, addr = 176
, space = 0, addr = 176
%46, space = 4, addr = 176
, space = 0, addr = 180
, space = 0, addr = 180
, space = 0, addr = 180
%47, space = 4, addr = 180
, space = 0, addr = 184
, space = 0, addr = 184
, space = 0, addr = 184
, space = 0, addr = 184
%49, space = 4, addr = 184
%50, space = 4, addr = 188
%51, space = 4, addr = 192
, space = 0, addr = 196
%53, space = 4, addr = 196
%54, space = 4, addr = 200
%55, space = 4, addr = 204
, space = 0, addr = 208
, space = 0, addr = 208
%58, space = 4, addr = 208
%59, space = 4, addr = 212
, space = 0, addr = 216
, space = 0, addr = 216
%61, space = 4, addr = 216
%62, space = 4, addr = 220
, space = 0, addr = 224
%63, space = 4, addr = 224
%64, space = 4, addr = 228
, space = 0, addr = 232
%65, space = 4, addr = 232
%66, space = 4, addr = 236
%67, space = 4, addr = 240
, space = 0, addr = 244
, space = 0, addr = 244
, space = 0, addr = 244
