frontend finish
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
@ans = dso_local global i32 0 

define dso_local void @gcd(i32,i32) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = load i32, i32* %3
	%6 = zext i1 0 to i32
	%7 = icmp eq i32 %5, %6
	%8 = icmp ne i1 %7, 0
	br i1 %8, label %14, label %9
9:
	%10 = load i32, i32* %4
	%11 = zext i1 0 to i32
	%12 = icmp eq i32 %10, %11
	%13 = icmp ne i1 %12, 0
	br i1 %13, label %21, label %16
14:
	%15 = load i32, i32* %4
	store i32 %15, i32* @ans
	ret void
16:
	%17 = load i32, i32* %3
	%18 = load i32, i32* %4
	%19 = icmp sge i32 %17, %18
	%20 = icmp ne i1 %19, 0
	br i1 %20, label %24, label %29
21:
	%22 = load i32, i32* %3
	store i32 %22, i32* @ans
	ret void
23:
	ret void
24:
	%25 = load i32, i32* %3
	%26 = load i32, i32* %4
	%27 = srem i32 %25, %26
	%28 = load i32, i32* %4
	call void @gcd(i32 %27,i32 %28)
	br label %23
29:
	%30 = load i32, i32* %3
	%31 = load i32, i32* %4
	%32 = load i32, i32* %3
	%33 = srem i32 %31, %32
	call void @gcd(i32 %30,i32 %33)
	br label %23
}

define dso_local void @output(i32) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
		call void @putch(i32 103)
	call void @putch(i32 99)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)

	call void @putint(i32 %3)
		call void @putch(i32 10)

	ret void
}

define dso_local void @error() {
		call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 108)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 112)
	call void @putch(i32 117)
	call void @putch(i32 116)
	call void @putch(i32 33)
	call void @putch(i32 10)

	ret void
}

define dso_local i32 @main() {
	%1 = alloca i32
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %1
	br label %4
4:
	%5 = load i32, i32* %1
	%6 = icmp ne i32 %5, -1
	%7 = icmp ne i1 %6, 0
	br i1 %7, label %8, label %14
8:
	%9 = call i32 @getint()
	store i32 %9, i32* %2
	%10 = load i32, i32* %1
	%11 = zext i1 0 to i32
	%12 = icmp eq i32 %10, %11
	%13 = icmp ne i1 %12, 0
	br i1 %13, label %19, label %15
14:
	ret i32 0
15:
	%16 = load i32, i32* %2
	%17 = icmp eq i32 %16, 0
	%18 = icmp ne i1 %17, 0
	br i1 %18, label %26, label %21
19:
	call void @error()
	%20 = call i32 @getint()
	store i32 %20, i32* %1
	br label %4
21:
	%22 = load i32, i32* %1
	%23 = load i32, i32* %2
	call void @gcd(i32 %22,i32 %23)
	%24 = load i32, i32* @ans
	call void @output(i32 %24)
	%25 = call i32 @getint()
	store i32 %25, i32* %1
	br label %4
26:
	call void @error()
	%27 = call i32 @getint()
	store i32 %27, i32* %1
	br label %4
}
@ans, 0
============================== in  function :: gcd
%0, addr = 4
%1, addr = 8
%3, space = 4, addr = 12
, space = 0, addr = 16
%4, space = 4, addr = 16
, space = 0, addr = 20
%5, space = 4, addr = 20
%6, space = 4, addr = 24
%7, space = 4, addr = 28
%8, space = 4, addr = 32
, space = 0, addr = 36
%10, space = 4, addr = 36
%11, space = 4, addr = 40
%12, space = 4, addr = 44
%13, space = 4, addr = 48
, space = 0, addr = 52
%15, space = 4, addr = 52
, space = 0, addr = 56
, space = 0, addr = 56
%17, space = 4, addr = 56
%18, space = 4, addr = 60
%19, space = 4, addr = 64
%20, space = 4, addr = 68
, space = 0, addr = 72
%22, space = 4, addr = 72
, space = 0, addr = 76
, space = 0, addr = 76
, space = 0, addr = 76
%25, space = 4, addr = 76
%26, space = 4, addr = 80
%27, space = 4, addr = 84
%28, space = 4, addr = 88
, space = 0, addr = 92
, space = 0, addr = 92
%30, space = 4, addr = 92
%31, space = 4, addr = 96
%32, space = 4, addr = 100
%33, space = 4, addr = 104
, space = 0, addr = 108
, space = 0, addr = 108
============================== in  function :: output
%0, addr = 4
%2, space = 4, addr = 8
, space = 0, addr = 12
%3, space = 4, addr = 12
, space = 0, addr = 16
, space = 0, addr = 16
, space = 0, addr = 16
, space = 0, addr = 16
============================== in  function :: error
, space = 0, addr = 4
, space = 0, addr = 4
============================== in  function :: main
%1, space = 4, addr = 4
%2, space = 4, addr = 8
%3, space = 4, addr = 12
, space = 0, addr = 16
, space = 0, addr = 16
%5, space = 4, addr = 16
%6, space = 4, addr = 20
%7, space = 4, addr = 24
, space = 0, addr = 28
%9, space = 4, addr = 28
, space = 0, addr = 32
%10, space = 4, addr = 32
%11, space = 4, addr = 36
%12, space = 4, addr = 40
%13, space = 4, addr = 44
, space = 0, addr = 48
, space = 0, addr = 48
%16, space = 4, addr = 48
%17, space = 4, addr = 52
%18, space = 4, addr = 56
, space = 0, addr = 60
, space = 0, addr = 60
%20, space = 4, addr = 60
, space = 0, addr = 64
, space = 0, addr = 64
%22, space = 4, addr = 64
%23, space = 4, addr = 68
, space = 0, addr = 72
%24, space = 4, addr = 72
, space = 0, addr = 76
%25, space = 4, addr = 76
, space = 0, addr = 80
, space = 0, addr = 80
, space = 0, addr = 80
%27, space = 4, addr = 80
, space = 0, addr = 84
, space = 0, addr = 84
