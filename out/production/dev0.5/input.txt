.data
	global:
	0 1 2 3 4 5 6 7 8 9
	str_1: .asciiz "\n"
	str_0: .asciiz ", "


.text
		la $28, global
		addiu	 $29, $29, -220

# function_i32 @main():
		f_main:
	# basicBlock_0
		# 	%1 = call i32 @getint()
		addiu	 $2, $0, 5
		syscall
		xor		 $5, $2, $0
		# 	%2 = call i32 @getint()
		addiu	 $2, $0, 5
		syscall
		xor		 $6, $2, $0
		# 	%3 = call i32 @fib(i32 4)
		sw		 $5, 12($29)
		sw		 $6, 16($29)
		sw		 $12, 40($29)
		sw		 $11, 24($29)
		sw		 $13, 8($29)
		sw		 $31, 0($29)
		addiu	 $1, $0, 4
		sw		 $1, -44($29)
		addiu	 $29, $29, -48
		jal f_fib
		addiu	 $29, $29, 48
		lw		 $31, 0($29)
		lw		 $12, 40($29)
		lw		 $11, 24($29)
		lw		 $13, 8($29)
		xor		 $5, $2, $0
		# 	%4 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
		addiu	 $11, $28, 4
		# 	%5 = load i32, i32* %4
		lw		 $6, 0($11)
		# 	%6 = call i32 @fib(i32 5)
		sw		 $5, 20($29)
		sw		 $6, 28($29)
		sw		 $12, 40($29)
		sw		 $11, 24($29)
		sw		 $13, 8($29)
		sw		 $31, 0($29)
		addiu	 $1, $0, 5
		sw		 $1, -44($29)
		addiu	 $29, $29, -48
		jal f_fib
		addiu	 $29, $29, 48
		lw		 $31, 0($29)
		lw		 $12, 40($29)
		lw		 $11, 24($29)
		lw		 $13, 8($29)
		xor		 $5, $2, $0
		# 	%7 = add i32 %6, 2
		addiu	 $6, $5, 2
		# 	%8 = call i32 @fib(i32 %7)
		sw		 $5, 32($29)
		sw		 $6, 36($29)
		sw		 $12, 40($29)
		sw		 $11, 24($29)
		sw		 $13, 8($29)
		sw		 $31, 0($29)
		sw		 $6, -44($29)
		addiu	 $29, $29, -48
		jal f_fib
		addiu	 $29, $29, 48
		lw		 $31, 0($29)
		lw		 $12, 40($29)
		lw		 $11, 24($29)
		lw		 $13, 8($29)
		xor		 $12, $2, $0
		# 	%9 = mul i32 %1, %2
		lw		 $5, 12($29)
		lw		 $6, 16($29)
		mult	 $5, $6
		mflo	 $7
		# 	%10 = sub i32 0, %9
		addiu	 $1, $0, 0
		subu	 $8, $1, $7
		# 	%11 = mul i32 %10, %3
		lw		 $9, 20($29)
		mult	 $8, $9
		mflo	 $10
		# 	%12 = add i32 %11, %5
		lw		 $5, 28($29)
		addu	 $6, $10, $5
		# 	%13 = mul i32 %12, 5
		sw		 $7, 44($29)
		sll		 $3, $6, 2
		addu	 $7, $3, $6
		# 	move %15 <-- %13
		xor		 $13, $7, $0
		# 	br label %14
		j bb_main_14
	# basicBlock_14
		bb_main_14:
		# 	%16 = icmp sle i32 %15, 100
		addiu	 $1, $0, 100
		sle		 $5, $13, $1
		# 	%17 = icmp ne i1 %16, 0
		# 	br i1 %17, label %18, label %remove_phi_mid0
		addiu	 $1, $0, 0
		bne		 $5, $1, bb_main_18
		j bb_main_remove_phi_mid0
	# basicBlock_18
		bb_main_18:
		# 	%19 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
		addiu	 $5, $28, 0
		# 	%20 = load i32, i32* %19
		lw		 $6, 0($5)
		# 	%21 = add i32 %20, 36
		addiu	 $7, $6, 36
		# 	store i32 %21, i32* %19
		sw		 $7, 0($5)
		# 	%22 = load i32, i32* %4
		lw		 $8, 0($11)
		# 	%23 = add i32 %22, 36
		addiu	 $9, $8, 36
		# 	store i32 %23, i32* %4
		sw		 $9, 0($11)
		# 	%24 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
		addiu	 $10, $28, 8
		# 	%25 = load i32, i32* %24
		sw		 $6, 76($29)
		lw		 $6, 0($10)
		# 	%26 = add i32 %25, 36
		sw		 $5, 72($29)
		addiu	 $5, $6, 36
		# 	store i32 %26, i32* %24
		sw		 $5, 0($10)
		# 	%27 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
		sw		 $7, 80($29)
		addiu	 $7, $28, 12
		# 	%28 = load i32, i32* %27
		sw		 $8, 84($29)
		lw		 $8, 0($7)
		# 	%29 = add i32 %28, 36
		sw		 $9, 88($29)
		addiu	 $9, $8, 36
		# 	store i32 %29, i32* %27
		sw		 $9, 0($7)
		# 	%30 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
		sw		 $6, 96($29)
		addiu	 $6, $28, 16
		# 	%31 = load i32, i32* %30
		sw		 $5, 100($29)
		lw		 $5, 0($6)
		# 	%32 = add i32 %31, 36
		sw		 $10, 92($29)
		addiu	 $10, $5, 36
		# 	store i32 %32, i32* %30
		sw		 $10, 0($6)
		# 	%33 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
		sw		 $8, 108($29)
		addiu	 $8, $28, 20
		# 	%34 = load i32, i32* %33
		sw		 $7, 104($29)
		lw		 $7, 0($8)
		# 	%35 = add i32 %34, 36
		sw		 $9, 112($29)
		addiu	 $9, $7, 36
		# 	store i32 %35, i32* %33
		sw		 $9, 0($8)
		# 	%36 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
		sw		 $5, 120($29)
		addiu	 $5, $28, 24
		# 	%37 = load i32, i32* %36
		sw		 $6, 116($29)
		lw		 $6, 0($5)
		# 	%38 = add i32 %37, 36
		sw		 $10, 124($29)
		addiu	 $10, $6, 36
		# 	store i32 %38, i32* %36
		sw		 $10, 0($5)
		# 	%39 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
		sw		 $7, 132($29)
		addiu	 $7, $28, 28
		# 	%40 = load i32, i32* %39
		sw		 $8, 128($29)
		lw		 $8, 0($7)
		# 	%41 = add i32 %40, 36
		sw		 $9, 136($29)
		addiu	 $9, $8, 36
		# 	store i32 %41, i32* %39
		sw		 $9, 0($7)
		# 	%42 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
		sw		 $6, 144($29)
		addiu	 $6, $28, 32
		# 	%43 = load i32, i32* %42
		sw		 $5, 140($29)
		lw		 $5, 0($6)
		# 	%44 = add i32 %43, 36
		sw		 $10, 148($29)
		addiu	 $10, $5, 36
		# 	store i32 %44, i32* %42
		sw		 $10, 0($6)
		# 	%45 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
		sw		 $8, 156($29)
		addiu	 $8, $28, 36
		# 	%46 = load i32, i32* %45
		sw		 $7, 152($29)
		lw		 $7, 0($8)
		# 	%47 = add i32 %46, 36
		sw		 $9, 160($29)
		addiu	 $9, $7, 36
		# 	store i32 %47, i32* %45
		sw		 $9, 0($8)
		# 	%48 = add i32 %15, 1
		sw		 $5, 168($29)
		addiu	 $5, $13, 1
		# 	move %15 <-- %48
		xor		 $13, $5, $0
		# 	br label %14
		j bb_main_14
	# basicBlock_49
		bb_main_49:
		# 	%51 = icmp slt i32 %50, 10
		slti	 $5, $11, 10
		# 	%52 = icmp ne i1 %51, 0
		# 	br i1 %52, label %53, label %57
		addiu	 $1, $0, 0
		bne		 $5, $1, bb_main_53
		j bb_main_57
	# basicBlock_53
		bb_main_53:
		# 	%54 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %50
		addiu	 $5, $28, 0
		sll		 $1, $11, 2
		addu	 $5, $5, $1
		# 	%55 = load i32, i32* %54
		lw		 $6, 0($5)
		# 	call void @putint(i32 %55)
		xor		 $4, $6, $0
		addiu	 $2, $0, 1
		syscall
		la $4, str_0
		addiu	 $2, $0, 4
		syscall
		# 	%56 = add i32 %50, 1
		addiu	 $7, $11, 1
		# 	move %50 <-- %56
		xor		 $11, $7, $0
		# 	br label %49
		j bb_main_49
	# basicBlock_57
		bb_main_57:
		la $4, str_1
		addiu	 $2, $0, 4
		syscall
		# 	call void @putint(i32 %50)
		xor		 $4, $11, $0
		addiu	 $2, $0, 1
		syscall
		la $4, str_0
		addiu	 $2, $0, 4
		syscall
		# 	%58 = sub i32 1197, %8
		addiu	 $1, $0, 1197
		subu	 $5, $1, $12
		# 	%59 = add i32 %58, -10091
		addiu	 $6, $5, -10091
		# 	call void @putint(i32 %59)
		xor		 $4, $6, $0
		addiu	 $2, $0, 1
		syscall
		la $4, str_0
		addiu	 $2, $0, 4
		syscall
		# 	call void @putint(i32 -6)
		addiu	 $4, $0, 6
		subu	 $4, $0, $4
		addiu	 $2, $0, 1
		syscall
		la $4, str_1
		addiu	 $2, $0, 4
		syscall
		# 	ret i32 0
		addiu	 $2, $0, 10
		syscall
	# basicBlock_remove_phi_mid0
		bb_main_remove_phi_mid0:
		# 	move %50 <-- 0
		addiu	 $11, $0, 0
		# 	br label %49
		j bb_main_49

# function_i32 @fib(i32):
		f_fib:
	# basicBlock_1
		# 	%2 = zext i1 1 to i32
		addiu	 $5, $0, 1
		# 	%3 = icmp eq i32 %0, %2
		lw		 $6, 4($29)
		seq		 $7, $6, $5
		# 	%4 = icmp ne i1 %3, 0
		# 	br i1 %4, label %8, label %5
		addiu	 $1, $0, 0
		bne		 $7, $1, bb_fib_8
		j bb_fib_5
	# basicBlock_5
		bb_fib_5:
		# 	%6 = icmp eq i32 %0, 2
		lw		 $5, 4($29)
		addiu	 $1, $0, 2
		seq		 $6, $5, $1
		# 	%7 = icmp ne i1 %6, 0
		# 	br i1 %7, label %15, label %9
		addiu	 $1, $0, 0
		bne		 $6, $1, bb_fib_15
		j bb_fib_9
	# basicBlock_8
		bb_fib_8:
		# 	ret i32 1
		addiu	 $2, $0, 1
		jr $31
	# basicBlock_9
		bb_fib_9:
		# 	%10 = sub i32 %0, 1
		lw		 $5, 4($29)
		addiu	 $1, $0, 1
		subu	 $6, $5, $1
		# 	%11 = call i32 @fib(i32 %10)
		sw		 $6, 28($29)
		sw		 $31, 0($29)
		sw		 $6, -44($29)
		addiu	 $29, $29, -48
		jal f_fib
		addiu	 $29, $29, 48
		lw		 $31, 0($29)
		xor		 $5, $2, $0
		# 	%12 = sub i32 %0, 2
		lw		 $6, 4($29)
		addiu	 $1, $0, 2
		subu	 $7, $6, $1
		# 	%13 = call i32 @fib(i32 %12)
		sw		 $5, 32($29)
		sw		 $7, 36($29)
		sw		 $31, 0($29)
		sw		 $7, -44($29)
		addiu	 $29, $29, -48
		jal f_fib
		addiu	 $29, $29, 48
		lw		 $31, 0($29)
		xor		 $5, $2, $0
		# 	%14 = add i32 %11, %13
		lw		 $6, 32($29)
		addu	 $7, $6, $5
		# 	ret i32 %14
		xor		 $2, $7, $0
		jr $31
	# basicBlock_15
		bb_fib_15:
		# 	ret i32 2
		addiu	 $2, $0, 2
		jr $31
