/*
int foo() {
return 72;
}
int notmain() {
return 0;
}

int main()
{

    int a = 3, b = 7, c = 5, d = 6, e = 1, f = 0, g = 3, h = 5,
        i = 4, j = 2, k = 7, l = 9, m = 8, n = 1, o = 4, p = 6;

    int sum1 = a + b + c + d + e + f + g + h;
    int sum2 = i + j + k + l + m + n + o + p;

sum1 = sum1 + foo() + foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo()+ foo();

    int q = 4, r = 7, s = 2, t = 5, u = 8, v = 0, w = 6, x = 3;



    a = i; b = j; c = k; d = l;
    e = m; f = n; g = o; h = p;

    int sum3 = q + r + s + t + u + v + w + x;

    int sum = sum1 + sum2 + sum3;

    printf("%d", sum);

    return 0;
}
*/


/*
int b[2][2]={{5,4},{3,2}};
int c[3][3];
int foo(int arr[]) {
arr[0] = arr[3];
arr[arr[0]] = c[b[1][1]][2*2-3] + 12321;
return arr[3];
}
int main() {
int a[2][5] = {{1,2,3,4,5},{0,0,b[1][1]*2-1,0,0}};
a[1][b[1][0]-1] = a[0][0];
printf("%d", foo(a[1]));
return 0;
}
*/
/*
int main() {
int a = 0, b = 1;
const int c = 12;
if(a > b && (b-1) != 0 || b > 2 || a < b * b) {
printf("as");
} else {
printf("s");
}
return 0;
}

int main() {
int i = 0;
while(i * i < 12 - 1) {
if (i > 10) {
break;
} else {
i=i+1;
continue;
}
}
return 0;
}*/





const int constarr[2][2]={{2,1},{0,4}};


void set1(int pos, int arr[]) {
    arr[pos] = 1;
}

int set2(int arr[][4]) {
return 0;
}

int main() {
    int j=0;
    while(j < 10) j = j + 1;

    int i1=99999;
    int i2=0;
    int i3=0;
    int i4=0;
    int i5=0;
    //int i6=0;int it5=0;int i7=0;int ir7=0;int irr7=0;int irrr7=0;int irrrr7=0;int irrrrrr7=0;int irrrrrrrrr7=0;int i733=0;int i37=0;int iw7=0;int iww7=0;

    int ga = i1 + 1;

    int a[2][5];
    const int yy  = 1;
    int b[2][ constarr[0][0] + 3*1 - yy];
    set2(b);
    int n;
    n = 5;
    int i = 0;
    while (i < n) {
        set1(i, a[i % 2]);
        i = i + 1;
    }
    return 0;
}