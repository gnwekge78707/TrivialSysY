declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32) {
	%2 = zext i1 1 to i32
	%3 = icmp eq i32 %0, %2
	%4 = icmp ne i1 %3, 0
	br i1 %4, label %8, label %5
5:
	%6 = icmp eq i32 %0, 2
	%7 = icmp ne i1 %6, 0
	br i1 %7, label %15, label %9
8:
	ret i32 1
9:
	%10 = sub i32 %0, 1
	%11 = call i32 @fib(i32 %10)
	%12 = sub i32 %0, 2
	%13 = call i32 @fib(i32 %12)
	%14 = add i32 %11, %13
	ret i32 %14
15:
	ret i32 2
}

define dso_local i32 @main() {
	%1 = call i32 @getint()
	%2 = call i32 @getint()
	%3 = call i32 @fib(i32 4)
	%4 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%5 = load i32, i32* %4
		call void @putch(i32 10)

	%6 = mul i32 %1, %2
	%7 = sub i32 0, %6
	%8 = mul i32 %7, %3
	%9 = add i32 %8, %5
	%10 = mul i32 %9, 5
	call void @putint(i32 %10)
		call void @putch(i32 44)
	call void @putch(i32 32)

	call void @putint(i32 %2)
		call void @putch(i32 44)
	call void @putch(i32 32)

	call void @putint(i32 10)
		call void @putch(i32 10)

	ret i32 0
}
