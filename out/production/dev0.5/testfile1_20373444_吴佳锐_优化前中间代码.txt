declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = zext i1 1 to i32
	%5 = icmp eq i32 %3, %4
	%6 = icmp ne i1 %5, 0
	br i1 %6, label %11, label %7
7:
	%8 = load i32, i32* %2
	%9 = icmp eq i32 %8, 2
	%10 = icmp ne i1 %9, 0
	br i1 %10, label %20, label %12
11:
	ret i32 1
12:
	%13 = load i32, i32* %2
	%14 = sub i32 %13, 1
	%15 = call i32 @fib(i32 %14)
	%16 = load i32, i32* %2
	%17 = sub i32 %16, 2
	%18 = call i32 @fib(i32 %17)
	%19 = add i32 %15, %18
	ret i32 %19
20:
	ret i32 2
}

define dso_local i32 @main() {
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = call i32 @getint()
	store i32 %3, i32* %1
	%4 = call i32 @getint()
	store i32 %4, i32* %2
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = mul i32 %5, %6
	%8 = sub i32 0, %7
	%9 = call i32 @fib(i32 4)
	%10 = mul i32 %8, %9
	%11 = add i32 %10, 0
	%12 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%13 = load i32, i32* %12
	%14 = mul i32 %13, 1
	%15 = add i32 %11, %14
	%16 = sub i32 %15, 0
	%17 = mul i32 %16, 5
	store i32 %17, i32* %1
	%18 = call i32 @fib(i32 5)
	%19 = add i32 %18, 2
	%20 = call i32 @fib(i32 %19)
	%21 = sub i32 1197, %20
	%22 = add i32 %21, -10091
	store i32 %22, i32* %2
	%23 = alloca i32
	store i32 -6, i32* %23
	br label %24
24:
	%25 = load i32, i32* %1
	%26 = icmp sle i32 %25, 100
	%27 = icmp ne i1 %26, 0
	br i1 %27, label %28, label %101
28:
	%29 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%30 = load i32, i32* %29
	%31 = load i32, i32* %23
	%32 = load i32, i32* %23
	%33 = mul i32 %31, %32
	%34 = add i32 %30, %33
	%35 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	store i32 %34, i32* %35
	%36 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%37 = load i32, i32* %36
	%38 = load i32, i32* %23
	%39 = load i32, i32* %23
	%40 = mul i32 %38, %39
	%41 = add i32 %37, %40
	%42 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	store i32 %41, i32* %42
	%43 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%44 = load i32, i32* %43
	%45 = load i32, i32* %23
	%46 = load i32, i32* %23
	%47 = mul i32 %45, %46
	%48 = add i32 %44, %47
	%49 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	store i32 %48, i32* %49
	%50 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%51 = load i32, i32* %50
	%52 = load i32, i32* %23
	%53 = load i32, i32* %23
	%54 = mul i32 %52, %53
	%55 = add i32 %51, %54
	%56 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	store i32 %55, i32* %56
	%57 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%58 = load i32, i32* %57
	%59 = load i32, i32* %23
	%60 = load i32, i32* %23
	%61 = mul i32 %59, %60
	%62 = add i32 %58, %61
	%63 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	store i32 %62, i32* %63
	%64 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%65 = load i32, i32* %64
	%66 = load i32, i32* %23
	%67 = load i32, i32* %23
	%68 = mul i32 %66, %67
	%69 = add i32 %65, %68
	%70 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	store i32 %69, i32* %70
	%71 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%72 = load i32, i32* %71
	%73 = load i32, i32* %23
	%74 = load i32, i32* %23
	%75 = mul i32 %73, %74
	%76 = add i32 %72, %75
	%77 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	store i32 %76, i32* %77
	%78 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%79 = load i32, i32* %78
	%80 = load i32, i32* %23
	%81 = load i32, i32* %23
	%82 = mul i32 %80, %81
	%83 = add i32 %79, %82
	%84 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	store i32 %83, i32* %84
	%85 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%86 = load i32, i32* %85
	%87 = load i32, i32* %23
	%88 = load i32, i32* %23
	%89 = mul i32 %87, %88
	%90 = add i32 %86, %89
	%91 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	store i32 %90, i32* %91
	%92 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%93 = load i32, i32* %92
	%94 = load i32, i32* %23
	%95 = load i32, i32* %23
	%96 = mul i32 %94, %95
	%97 = add i32 %93, %96
	%98 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	store i32 %97, i32* %98
	%99 = load i32, i32* %1
	%100 = add i32 %99, 1
	store i32 %100, i32* %1
	br label %24
101:
	store i32 0, i32* %1
	br label %102
102:
	%103 = load i32, i32* %1
	%104 = icmp slt i32 %103, 10
	%105 = icmp ne i1 %104, 0
	br i1 %105, label %106, label %113
106:
	%107 = load i32, i32* %1
	%108 = mul i32 %107, 1
	%109 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %108
	%110 = load i32, i32* %109
	call void @putint(i32 %110)
		call void @putch(i32 44)
	call void @putch(i32 32)

	%111 = load i32, i32* %1
	%112 = add i32 %111, 1
	store i32 %112, i32* %1
	br label %102
113:
	%114 = load i32, i32* %1
	%115 = load i32, i32* %2
	%116 = load i32, i32* %23
		call void @putch(i32 10)

	call void @putint(i32 %114)
		call void @putch(i32 44)
	call void @putch(i32 32)

	call void @putint(i32 %115)
		call void @putch(i32 44)
	call void @putch(i32 32)

	call void @putint(i32 %116)
		call void @putch(i32 10)

	ret i32 0
}
