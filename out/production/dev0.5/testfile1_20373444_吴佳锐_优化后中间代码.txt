declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32) {
	%2 = zext i1 1 to i32
	%3 = icmp eq i32 %0, %2
	%4 = icmp ne i1 %3, 0
	br i1 %4, label %8, label %5
5:
	%6 = icmp eq i32 %0, 2
	%7 = icmp ne i1 %6, 0
	br i1 %7, label %15, label %9
8:
	ret i32 1
9:
	%10 = sub i32 %0, 1
	%11 = call i32 @fib(i32 %10)
	%12 = sub i32 %0, 2
	%13 = call i32 @fib(i32 %12)
	%14 = add i32 %11, %13
	ret i32 %14
15:
	ret i32 2
}

define dso_local i32 @main() {
	%1 = call i32 @getint()
	%2 = call i32 @getint()
	%3 = call i32 @fib(i32 4)
	%4 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%5 = load i32, i32* %4
	%6 = call i32 @fib(i32 5)
	%7 = add i32 %6, 2
	%8 = call i32 @fib(i32 %7)
	%9 = mul i32 %1, %2
	%10 = sub i32 0, %9
	%11 = mul i32 %10, %3
	%12 = add i32 %11, %5
	%13 = mul i32 %12, 5
	move %15 <-- %13
	br label %14
14:
	%16 = icmp sle i32 %15, 100
	%17 = icmp ne i1 %16, 0
	br i1 %17, label %18, label %remove_phi_mid0
18:
	%19 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%20 = load i32, i32* %19
	%21 = add i32 %20, 36
	store i32 %21, i32* %19
	%22 = load i32, i32* %4
	%23 = add i32 %22, 36
	store i32 %23, i32* %4
	%24 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%25 = load i32, i32* %24
	%26 = add i32 %25, 36
	store i32 %26, i32* %24
	%27 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%28 = load i32, i32* %27
	%29 = add i32 %28, 36
	store i32 %29, i32* %27
	%30 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%31 = load i32, i32* %30
	%32 = add i32 %31, 36
	store i32 %32, i32* %30
	%33 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%34 = load i32, i32* %33
	%35 = add i32 %34, 36
	store i32 %35, i32* %33
	%36 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%37 = load i32, i32* %36
	%38 = add i32 %37, 36
	store i32 %38, i32* %36
	%39 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%40 = load i32, i32* %39
	%41 = add i32 %40, 36
	store i32 %41, i32* %39
	%42 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%43 = load i32, i32* %42
	%44 = add i32 %43, 36
	store i32 %44, i32* %42
	%45 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%46 = load i32, i32* %45
	%47 = add i32 %46, 36
	store i32 %47, i32* %45
	%48 = add i32 %15, 1
	move %15 <-- %48
	br label %14
49:
	%51 = icmp slt i32 %50, 10
	%52 = icmp ne i1 %51, 0
	br i1 %52, label %53, label %57
53:
	%54 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %50
	%55 = load i32, i32* %54
	call void @putint(i32 %55)
		call void @putch(i32 44)
	call void @putch(i32 32)

	%56 = add i32 %50, 1
	move %50 <-- %56
	br label %49
57:
		call void @putch(i32 10)

	call void @putint(i32 %50)
		call void @putch(i32 44)
	call void @putch(i32 32)

	%58 = sub i32 1197, %8
	%59 = add i32 %58, -10091
	call void @putint(i32 %59)
		call void @putch(i32 44)
	call void @putch(i32 32)

	call void @putint(i32 -6)
		call void @putch(i32 10)

	ret i32 0
remove_phi_mid0:
	move %50 <-- 0
	br label %49
}
