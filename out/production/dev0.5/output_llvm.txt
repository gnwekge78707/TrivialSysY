declare i32 @getint()
declare void @putint(i32 )
declare void @putch(i32 )
@g1 = dso_local global i32 0 
@g3 = dso_local global i32 1
@g2 = dso_local global i32 0 

define dso_local void @set1(i32 %0,i32 %1) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = load i32, i32* %3
	call void @putint(i32 1)
	call void @putint(i32 1)
	call void @putint(i32 %5)
	ret i32 0
}

define dso_local i32 @set2() {
	%1 = alloca i32
	store i32 16, i32* %1
	%2 = load i32, i32* %1
	%3 = mul i32 %2, 1
	%4 = load i32, i32* @g1
	%5 = mul i32 %4, 8
	%6 = sdiv i32 %3, %5
	store i32 %6, i32* %1
	%7 = load i32, i32* %1
	%8 = load i32, i32* @g2
	%9 = add i32 %7, %8
	%10 = load i32, i32* @g3
	call void @set1(i32 %9,i32 %10)
	ret i32 0
}

define dso_local i32 @main() {
	%1 = alloca i32
	%2 = call i32 @getint()
	store i32 %2, i32* %1
	%3 = load i32, i32* @g3
	%4 = add i32 0, %3
	%5 = alloca i32
	store i32 %4, i32* %5
	%6 = load i32, i32* %5
	%7 = add i32 %6, 4
	%8 = alloca i32
	store i32 %7, i32* %8
	%9 = load i32, i32* %8
	%10 = load i32, i32* @g3
	%11 = add i32 %9, %10
	store i32 %11, i32* %8
	%12 = load i32, i32* %1
		call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)

	call void @putint(i32 %12)
		call void @putch(i32 92)
	call void @putch(i32 110)

	ret i32 0
}
